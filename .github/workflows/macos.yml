name: MacOS CI Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
    build_type: Release

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install package dependencies
      run: |
        brew install git
        brew install ninja
        brew install cmake
        brew install llvm@17
        brew install boost
        brew install python

    - name: Install Python dependencies
      run: |
        pip install lit
        pip install filecheck
        pip install sphinx
        pip install sphinx_rtd_theme

    - name: Configure CMake
      run: >
        cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -G "Ninja"   
        -DLLVM_DIR=/opt/homebrew/opt/llvm@17/lib/cmake/llvm/
#        -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm@17/bin/clang++
#        -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm@17/bin/clang

    - name: Build compiler
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.build_type }}

    - name: Build documentation
      run: cmake --build ${{ github.workspace }}/build --target docs

    - name: Install compiler
      run: cmake --install ${{ github.workspace }}/build --prefix install

    - name: Run unit test
      run: cmake --build ${{ github.workspace }}/build --target test | tee ${{ github.workspace }}/build/test_report_macos.txt

    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: binary-macos-release
        path: ${{ github.workspace }}/install/**/*

    - name: Upload report
      uses: actions/upload-artifact@v4
      with:
        name: test_report_macos.txt
        path: ${{ github.workspace }}/build/test_report_macos.txt
name: MSYS2 CI Build

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

env:
    build_type: Release

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      with:
        msystem: CLANG64
        update: true

    - name:
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install packages
      run: |
        pacman --noconfirm -S --needed --overwrite git &&
        pacman --noconfirm -S --needed --overwrite make &&
        pacman --noconfirm -S --needed --overwrite mingw-w64-clang-x86_64-python-pip &&
        pacman --noconfirm -S --needed --overwrite mingw-w64-clang-x86_64-toolchain &&
        pacman --noconfirm -S --needed --overwrite mingw-w64-clang-x86_64-boost &&
        pacman --noconfirm -S --needed --overwrite mingw-w64-clang-x86_64-cmake

    - name: Install lit & filecheck
      run: |
        pip3 install lit &&
        pip3 install filecheck

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -S ${{ github.workspace }} -G "MSYS Makefiles"

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ env.build_type }}

    - name: Install
      run: cmake --install ${{ steps.strings.outputs.build-output-dir }} --prefix install  || true

    - name: Test
      run: cd ${{ steps.strings.outputs.build-output-dir }} && make test || true

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: binary-msys2-release
        path: ${{ steps.strings.outputs.build-output-dir }}/install/**

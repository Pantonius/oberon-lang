MODULE Random;(*   Simple Random Generator   Fabian MÃ¤ser,   7.6.95   MacOberon 4.115 auf Mac Quadra 840AV   last changed: 16.6.95*)CONST   A = 16807;   M = 2147483647;   Q = M DIV A;   R = M MOD A;VAR   seed: LONGINT;PROCEDURE SetSeed* (x: LONGINT);BEGIN   seed := xEND SetSeed;PROCEDURE Int* (hi: INTEGER): INTEGER;(* returns an INTEGER-number within [0..hi] *)BEGIN   IF hi < 0 THEN RETURN -99 END;   seed := A * (seed MOD Q) - R * (seed DIV Q);   IF seed <= 0 THEN seed := seed + M END;   RETURN SHORT(seed DIV (M DIV (hi + 1) + 1))END Int;PROCEDURE Uniform*(): REAL;(* returns a REAL-number within [0..1] *)BEGIN   seed := A * (seed MOD Q) - R * (seed DIV Q);   IF seed <= 0 THEN seed := seed + M END;   RETURN seed * (1.0/M)END Uniform;BEGIN   seed := 1235END Random.
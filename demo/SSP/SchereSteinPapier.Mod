MODULE SchereSteinPapier;IMPORT    Out, Spieler;CONST    MaxSpieler* = 30;    N* = 100;    (* Verwende dieses N in deinem Code *)VAR    nofSpieler : INTEGER;    spieler : ARRAY MaxSpieler OF Spieler.Spieler;    punkte : ARRAY MaxSpieler OF LONGINT;PROCEDURE FuegeHinzu* (s : Spieler.Spieler);BEGIN    IF nofSpieler < MaxSpieler-1 THEN        spieler[nofSpieler] := s;        INC (nofSpieler);        Out.String("Spieler hinzugefuegt."); Out.Ln    ENDEND FuegeHinzu;PROCEDURE Gewinn (du, er : Spieler.Symbol) : INTEGER;BEGIN    IF (du # Spieler.Schere) & (du # Spieler.Stein) & (du # Spieler.Papier) THEN RETURN -1 END;    IF (er # Spieler.Schere) & (er # Spieler.Stein) & (er # Spieler.Papier) THEN RETURN 1 END;    IF du = er  THEN RETURN 0 END;    IF (du = Spieler.Schere) & (er = Spieler.Papier) OR        (du = Spieler.Papier) & (er = Spieler.Stein) OR        (du = Spieler.Stein) & (er = Spieler.Schere) THEN RETURN 1     END;    IF (du = Spieler.Schere) & (er = Spieler.Stein) OR        (du = Spieler.Papier) & (er = Spieler.Schere) OR        (du = Spieler.Stein) & (er = Spieler.Papier) THEN RETURN -1     END;END Gewinn;PROCEDURE Start*;VAR runde, k : INTEGER;    a, b : Spieler.Symbol;    h1, h2 : INTEGER;BEGIN    FOR k := 0 TO nofSpieler - 1 DO        spieler[k].InitSpieler (nofSpieler);        punkte[k] := 0    END;    (* eigentliche Simulation: Jeder spielt mit jedem N Runden: *)    FOR runde := 1 TO N DO        FOR h1 := 0 TO nofSpieler - 2 DO            FOR h2 := h1 + 1 TO nofSpieler - 1 DO                a := spieler[h1].ZeigeSymbol(h2);                b := spieler[h2].ZeigeSymbol(h1);                spieler[h1].PartnerZeigte(h2, b);                spieler[h2].PartnerZeigte(h1, a);                punkte[h1] := punkte[h1] + Gewinn(a,b);                punkte[h2] := punkte[h2] + Gewinn(b,a)            END        END    END;    Out.String("Anzahl Runden: "); Out.Int(N,10); Out.Ln;    FOR k := 0 TO nofSpieler - 1 DO        Out.String("Spieler ");        Out.Int(k,0); Out.Char(" "); Out.String(spieler[k].name);        Out.String(": Punkte =");        Out.Int(punkte[k],10);        Out.Ln    ENDEND Start;PROCEDURE Reset*;BEGIN    nofSpieler := 0END Reset;BEGIN    ResetEND SchereSteinPapier.Out.OpenSchereSteinPapier.ResetSchereSteinPapier.Start
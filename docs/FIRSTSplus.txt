FIRST+ Sets of the Grammar of the Oberon Programming Language
----------------------------------------------------------------------------------------------------------------------------

%0 → %1 %0                                       | [<,>]
%0 → <ε>                                         | [<ε>, <:>]
%1 → <,> ident                                   | [<,>]
%10 → %11 %10                                    | [<ident_literal>]
%10 → <ε>                                        | [<PROCEDURE>, <END>, <ε>, <VAR>, <BEGIN>]
%11 → ident <=> type <;>                         | [<ident_literal>]
%12 → %13 %12                                    | [<;>]
%12 → <ε>                                        | [<END>, <ε>]
%13 → <;> field_list                             | [<;>]
%14 → %15 %14                                    | [<ident_literal>]
%14 → <ε>                                        | [<PROCEDURE>, <END>, <ε>, <BEGIN>]
%15 → ident_list <:> type <;>                    | [<ident_literal>]
%16 → <EXTERN>                                   | [<EXTERN>]
%16 → procedure_body ident                       | [<TYPE>, <PROCEDURE>, <VAR>, <CONST>, <BEGIN>, <END>]
%17 → <ε>                                        | [<ε>, <;>, <:>]
%17 → formal_parameters                          | [<(>]
%18 → <:> type                                   | [<:>]
%18 → <ε>                                        | [<;>, <ε>]
%19 → <BEGIN> statement_sequence                 | [<BEGIN>]
%19 → <ε>                                        | [<END>, <ε>]
%2 → <BEGIN> statement_sequence                  | [<BEGIN>]
%2 → <ε>                                         | [<END>, <ε>]
%20 → <ε>                                        | [<ε>, <)>]
%20 → fp_section %21                             | [<VAR>, <ident_literal>, <...>]
%21 → %22 %21                                    | [<;>]
%21 → <ε>                                        | [<ε>, <)>]
%22 → <;> fp_section                             | [<;>]
%23 → %24 ident_list <:> type                    | [<VAR>, <ε>, <ident_literal>]
%23 → <...>                                      | [<...>]
%24 → <VAR>                                      | [<VAR>]
%24 → <ε>                                        | [<ε>, <:>, <ident_literal>]
%25 → %26 %25                                    | [<;>]
%25 → <ε>                                        | [<END>, <ε>, <UNTIL>, <ELSE>, <ELSIF>]
%26 → <;> statement                              | [<;>]
%27 → <EXIT>                                     | [<EXIT>]
%27 → <RETURN> %28                               | [<RETURN>]
%27 → assignment                                 | [<ident_literal>]
%27 → case_statement                             | []
%27 → for_statement                              | [<FOR>]
%27 → if_statement                               | [<IF>]
%27 → loop_statement                             | [<LOOP>]
%27 → procedure_call                             | [<ident_literal>]
%27 → repeat_statement                           | [<REPEAT>]
%27 → while_statement                            | [<WHILE>]
%27 → with_statement                             | []
%28 → <ε>                                        | [<ε>, <END>, <UNTIL>, <ELSE>, <ELSIF>, <;>]
%28 → expression                                 | [<ident_literal>, <TRUE>, <FALSE>, <string_literal>, <->, <~>, <+>, <integer_literal>, <(>]
%29 → %30 %29                                    | [<.>, <[>]
%29 → <ε>                                        | [<ε>, <:=>]
%3 → <ε>                                         | [<ε>, <VAR>, <PROCEDURE>, <END>, <TYPE>, <BEGIN>]
%3 → const_declarations                          | [<CONST>]
%30 → selector                                   | [<[>, <.>]
%31 → <ε>                                        | [<ε>, <END>, <;>, <UNTIL>, <ELSE>, <ELSIF>]
%31 → actual_parameters                          | [<(>]
%32 → <ε>                                        | [<ε>, <)>]
%32 → expression %33                             | [<ident_literal>, <TRUE>, <FALSE>, <string_literal>, <->, <~>, <+>, <integer_literal>, <(>]
%33 → %34 %33                                    | [<,>]
%33 → <ε>                                        | [<ε>, <)>]
%34 → <,> expression                             | [<,>]
%35 → %36 %35                                    | [<ELSIF>]
%35 → <ε>                                        | [<ELSE>, <END>, <ε>]
%36 → <ELSIF> expression <THEN> statement_sequence | [<ELSIF>]
%37 → <ELSE> statement_sequence                  | [<ELSE>]
%37 → <ε>                                        | [<END>, <ε>]
%38 → <BY> expression                            | [<BY>]
%38 → <ε>                                        | [<ε>, <DO>]
%39 → %40 simple_expression                      | [<=>, <<=>, <<>, <>=>, <#>, <>>]
%39 → <ε>                                        | [<;>, <ε>, <UNTIL>, <BY>, <ELSE>, <TO>, <]>, <DO>, <OF>, <THEN>, <ELSIF>, <,>, <END>, <)>]
%4 → <ε>                                         | [<END>, <PROCEDURE>, <ε>, <BEGIN>, <VAR>]
%4 → type_declarations                           | [<TYPE>]
%40 → <#>                                        | [<#>]
%40 → <<=>                                       | [<<=>]
%40 → <<>                                        | [<<>]
%40 → <=>                                        | [<=>]
%40 → <>=>                                       | [<>=>]
%40 → <>>                                        | [<>>]
%41 → <+>                                        | [<+>]
%41 → <->                                        | [<->]
%41 → <ε>                                        | [<<>, <OR>, <,>, <;>, <ε>, <)>, <>>, <~>, <<=>, <integer_literal>, <END>, <=>, <THEN>, <OF>, <ELSIF>, <TO>, <->, <#>, <>=>, <UNTIL>, <(>, <DO>, <ELSE>, <+>, <TRUE>, <BY>, <ident_literal>, <]>, <FALSE>, <string_literal>]
%42 → %43 %42                                    | [<+>, <OR>, <->]
%42 → <ε>                                        | [<<>, <,>, <END>, <=>, <<=>, <#>, <ε>, <;>, <)>, <ELSIF>, <>>, <THEN>, <OF>, <DO>, <ELSE>, <>=>, <UNTIL>, <BY>, <TO>, <]>]
%43 → %44 term                                   | [<+>, <OR>, <->]
%44 → <+>                                        | [<+>]
%44 → <->                                        | [<->]
%44 → <OR>                                       | [<OR>]
%45 → %46 %45                                    | [<DIV>, <MOD>, <&>, <*>]
%45 → <ε>                                        | [<;>, <ε>, <+>, <DO>, <ELSE>, <->, <BY>, <UNTIL>, <>=>, <TO>, <]>, <OF>, <THEN>, <)>, <ELSIF>, <>>, <#>, <<=>, <<>, <END>, <,>, <=>, <OR>]
%46 → %47 factor                                 | [<&>, <*>, <DIV>, <MOD>]
%47 → <&>                                        | [<&>]
%47 → <*>                                        | [<*>]
%47 → <DIV>                                      | [<DIV>]
%47 → <MOD>                                      | [<MOD>]
%48 → <ε>                                        | [<,>, <<>, <MOD>, <END>, <<=>, <*>, <=>, <THEN>, <#>, <->, <BY>, <DIV>, <;>, <ε>, <)>, <&>, <OF>, <ELSIF>, <>>, <UNTIL>, <>=>, <OR>, <DO>, <ELSE>, <[>, <+>, <.>, <TO>, <]>]
%48 → actual_parameters                          | [<(>]
%49 → %50 %49                                    | [<.>, <[>]
%49 → <ε>                                        | [<ε>, <*>, <MOD>, <<>, <<=>, <END>, <,>, <=>, <THEN>, <->, <#>, <BY>, <DIV>, <;>, <)>, <&>, <OF>, <ELSIF>, <>>, <TO>, <]>, <+>, <DO>, <ELSE>, <UNTIL>, <>=>, <OR>]
%5 → <ε>                                         | [<BEGIN>, <END>, <PROCEDURE>, <ε>]
%5 → var_declarations                            | [<VAR>]
%50 → selector                                   | [<[>, <.>]
%6 → %7 %6                                       | [<PROCEDURE>]
%6 → <ε>                                         | [<BEGIN>, <END>, <ε>]
%7 → procedure_declaration                       | [<PROCEDURE>]
%8 → %9 %8                                       | [<ident_literal>]
%8 → <ε>                                         | [<ε>, <PROCEDURE>, <VAR>, <BEGIN>, <END>, <TYPE>]
%9 → ident <=> expression <;>                    | [<ident_literal>]
actual_parameters → <(> %32 <)>                  | [<(>]
array_type → <ARRAY> expression <OF> type        | [<ARRAY>]
assignment → ident %29 <:=> expression           | [<ident_literal>]
const_declarations → <CONST> %8                  | [<CONST>]
declarations → %3 %4 %5 %6                       | [<CONST>, <ε>, <TYPE>, <END>, <VAR>, <PROCEDURE>, <BEGIN>]
expression → simple_expression %39               | [<(>, <integer_literal>, <+>, <~>, <string_literal>, <FALSE>, <TRUE>, <->, <ident_literal>]
factor → <(> expression <)>                      | [<(>]
factor → <FALSE>                                 | [<FALSE>]
factor → <TRUE>                                  | [<TRUE>]
factor → <~> factor                              | [<~>]
factor → ident %48 %49                           | [<ident_literal>]
factor → integer                                 | [<integer_literal>]
factor → string                                  | [<string_literal>]
field_list → ident_list <:> type                 | [<ident_literal>]
for_statement → <FOR> ident <:=> expression <TO> expression %38 <DO> statement_sequence <END> | [<FOR>]
formal_parameters → <(> %20 <)>                  | [<(>]
fp_section → %23                                 | [<VAR>, <ident_literal>, <...>]
ident → <ident_literal>                          | [<ident_literal>]
ident_list → ident %0                            | [<ident_literal>]
if_statement → <IF> expression <THEN> statement_sequence %35 %37 <END> | [<IF>]
integer → <integer_literal>                      | [<integer_literal>]
loop_statement → <LOOP> statement_sequence <END> | [<LOOP>]
module → <MODULE> ident <;> declarations %2 <END> ident <.> | [<MODULE>]
procedure_body → declarations %19 <END>          | [<TYPE>, <END>, <VAR>, <PROCEDURE>, <BEGIN>, <CONST>, <ε>]
procedure_call → ident %31                       | [<ident_literal>]
procedure_declaration → procedure_heading <;> %16 <;> | [<PROCEDURE>]
procedure_heading → <PROCEDURE> ident %17 %18    | [<PROCEDURE>]
record_type → <RECORD> field_list %12 <END>      | [<RECORD>]
repeat_statement → <REPEAT> statement_sequence <UNTIL> expression | [<REPEAT>]
selector → <.> ident                             | [<.>]
selector → <[> expression <]>                    | [<[>]
simple_expression → %41 term %42                 | [<->, <ε>, <ident_literal>, <TRUE>, <FALSE>, <~>, <+>, <integer_literal>, <(>, <string_literal>]
statement → %27                                  | [<WHILE>, <ident_literal>, <LOOP>, <RETURN>, <EXIT>, <REPEAT>, <FOR>, <IF>]
statement_sequence → statement %25               | [<IF>, <FOR>, <REPEAT>, <EXIT>, <LOOP>, <RETURN>, <WHILE>, <ident_literal>]
string → <string_literal>                        | [<string_literal>]
term → factor %45                                | [<string_literal>, <(>, <~>, <integer_literal>, <TRUE>, <FALSE>, <ident_literal>]
type → array_type                                | [<ARRAY>]
type → ident                                     | [<ident_literal>]
type → record_type                               | [<RECORD>]
type_declarations → <TYPE> %10                   | [<TYPE>]
var_declarations → <VAR> %14                     | [<VAR>]
while_statement → <WHILE> expression <DO> statement_sequence <END> | [<WHILE>]

FOLLOW Sets of the Grammar of the Oberon Programming Language
----------------------------------------------------------------------------------------------------------------------------

actual_parameters         | [<UNTIL>, <END>, <->, <OF>, <,>, <TO>, <ELSE>, <ELSIF>, <=>, <DO>, <BY>, <;>, <+>, <DIV>, <#>, <>>, <*>, <&>, <<>, <[>, <]>, <)>, <OR>, <MOD>, <>=>, <<=>, <THEN>, <.>]
array_type                | [<)>, <;>, <END>]
assignment                | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
case_statement            | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
const_declarations        | [<VAR>, <TYPE>, <PROCEDURE>, <END>, <BEGIN>]
declarations              | [<END>, <BEGIN>]
expression                | [<END>, <ELSE>, <TO>, <THEN>, <UNTIL>, <ELSIF>, <BY>, <DO>, <)>, <]>, <,>, <;>, <OF>]
factor                    | [<OF>, <,>, <->, <)>, <]>, <OR>, <TO>, <ELSE>, <ELSIF>, <=>, <BY>, <DO>, <<=>, <THEN>, <UNTIL>, <;>, <+>, <DIV>, <#>, <&>, <*>, <>>, <<>, <MOD>, <>=>, <END>]
field_list                | [<;>, <END>]
for_statement             | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
formal_parameters         | [<:>, <;>]
fp_section                | [<;>, <)>]
ident                     | [<END>, <ELSE>, <.>, <->, <(>, <:=>, <THEN>, <:>, <UNTIL>, <=>, <ELSIF>, <<=>, <MOD>, <>=>, <[>, <)>, <]>, <OR>, <*>, <&>, <>>, <#>, <DIV>, <;>, <+>, <BY>, <DO>, <,>, <OF>, <<>, <TO>]
ident_list                | [<:>]
if_statement              | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
integer                   | [<END>, <<>, <MOD>, <*>, <&>, <>>, <DIV>, <#>, <;>, <+>, <ELSIF>, <=>, <BY>, <DO>, <<=>, <THEN>, <UNTIL>, <TO>, <ELSE>, <OR>, <]>, <)>, <>=>, <,>, <OF>, <->]
loop_statement            | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
module                    | [<âˆ…>]
procedure_body            | [<TO>, <<>, <OF>, <,>, <DO>, <BY>, <ELSIF>, <=>, <DIV>, <#>, <*>, <>>, <&>, <[>, <OR>, <]>, <)>, <>=>, <MOD>, <UNTIL>, <:>, <<=>, <THEN>, <:=>, <(>, <->, <;>, <+>, <ELSE>, <.>, <END>, <ident_literal>]
procedure_call            | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
procedure_declaration     | [<PROCEDURE>, <BEGIN>, <END>]
procedure_heading         | [<;>]
record_type               | [<)>, <;>, <END>]
repeat_statement          | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
selector                  | [<.>, <END>, <<>, <MOD>, <;>, <+>, <#>, <DIV>, <>>, <*>, <&>, <BY>, <DO>, <=>, <ELSIF>, <<=>, <THEN>, <UNTIL>, <TO>, <ELSE>, <[>, <)>, <]>, <OR>, <>=>, <,>, <OF>, <->, <:=>]
simple_expression         | [<,>, <OF>, <;>, <>=>, <)>, <]>, <=>, <BY>, <DO>, <<=>, <THEN>, <UNTIL>, <ELSIF>, <ELSE>, <TO>, <END>, <#>, <<>, <>>]
statement                 | [<ELSIF>, <UNTIL>, <ELSE>, <;>, <END>]
statement_sequence        | [<UNTIL>, <ELSIF>, <ELSE>, <END>]
string                    | [<END>, <<>, <MOD>, <*>, <&>, <>>, <DIV>, <#>, <;>, <+>, <ELSIF>, <=>, <BY>, <DO>, <<=>, <THEN>, <UNTIL>, <TO>, <ELSE>, <OR>, <]>, <)>, <>=>, <,>, <OF>, <->]
term                      | [<END>, <>>, <<>, <+>, <#>, <=>, <BY>, <DO>, <TO>, <ELSE>, <<=>, <THEN>, <ELSIF>, <UNTIL>, <>=>, <)>, <]>, <->, <OF>, <;>, <,>, <OR>]
type                      | [<)>, <;>, <END>]
type_declarations         | [<PROCEDURE>, <VAR>, <END>, <BEGIN>]
var_declarations          | [<END>, <PROCEDURE>, <BEGIN>]
while_statement           | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
with_statement            | [<UNTIL>, <ELSIF>, <ELSE>, <;>, <END>]
Oberon-0 Grammar
----------------

ident → letter %0
%0 → %1 %0
%0 → <ε>
%1 → digit
%1 → letter

integer → digit %2
%2 → %3 %2
%2 → <ε>
%3 → digit

selector → %4
%4 → %5 %4
%4 → <ε>
%5 → <.> ident
%5 → <[> expression <]>

factor → ident selector
factor → integer
factor → <(> expression <)>
factor → <~> factor

term → factor %6
%6 → %7 %6
%6 → <ε>
%7 → %8 factor
%8 → <&>
%8 → <*>
%8 → <DIV>
%8 → <MOD>

SimpleExpression → %9 term %10
%9 → <+>
%9 → <->
%9 → <ε>
%10 → %11 %10
%10 → <ε>
%11 → %12 term
%12 → <+>
%12 → <->
%12 → <OR>

expression → SimpleExpression %13
%13 → %14 SimpleExpression
%13 → <ε>
%14 → <#>
%14 → <<=>
%14 → <<>
%14 → <=>
%14 → <>=>
%14 → <>>

assignment → ident selector <:=> expression

ActualParameters → <(> %15 <)>
%15 → <ε>
%15 → expression %16
%16 → %17 %16
%16 → <ε>
%17 → <,> expression

ProcedureCall → ident %18
%18 → <*>
%18 → <ε>
%18 → ActualParameters

IfStatement → <IF> expression <THEN> StatementSequence %19 %21 <END>
%19 → %20 %19
%19 → <ε>
%20 → <ELSIF> expression <THEN> StatementSequence
%21 → <ELSE> StatementSequence
%21 → <ε>

WhileStatement → <WHILE> expression <DO> StatementSequence <END>

statement → %22
%22 → assignment
%22 → IfStatement
%22 → ProcedureCall
%22 → RepeatStatement
%22 → WhileStatement
%22 → <ε>

StatementSequence → statement %23
%23 → %24 %23
%23 → <ε>
%24 → <;> statement

IdentList → ident %25
%25 → %26 %25
%25 → <ε>
%26 → <,> ident

ArrayType → <ARRAY> expression <OF> type

FieldList → %27
%27 → IdentList <:> type
%27 → <ε>

RecordType → <RECORD> FieldList %28 <END>
%28 → %29 %28
%28 → <ε>
%29 → <;> FieldList

type → ArrayType
type → ident
type → RecordType

FPSection → %30 IdentList <:> type
%30 → <VAR>
%30 → <ε>

FormalParameters → <(> %31 <)>
%31 → FPSection %32
%31 → <ε>
%32 → %33 %32
%32 → <ε>
%33 → <;> FPSection

ProcedureHeading → <PROCEDURE> ident %34
%34 → FormalParameters
%34 → <ε>

ProcedureBody → declarations %35 <END>
%35 → <BEGIN> StatementSequence
%35 → <ε>

ProcedureDeclaration → ProcedureHeading <;> ProcedureBody ident

declarations → %36 %39 %42 %45
%36 → <CONST> %37
%36 → <ε>
%37 → %38 %37
%37 → <ε>
%38 → ident <=> expression <;>

%39 → <TYPE> %40
%39 → <ε>
%40 → %41 %40
%40 → <ε>
%41 → ident <=> type <;>
%42 → <VAR> %43
%42 → <ε>
%43 → %44 %43
%43 → <ε>
%44 → IdentList <:> type <;>
%45 → %46 %45
%45 → <ε>
%46 → ProcedureDeclaration <;>

module → <MODULE> ident <;> declarations %47 <END> ident <.>
%47 → <BEGIN> StatementSequence
%47 → <ε>





















